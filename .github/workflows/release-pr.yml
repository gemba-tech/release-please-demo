on:
  pull_request:
    branches: [main]
    types: [closed]

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  ci:
    if: ${{ (!contains(github.event.head_commit.message, '#skip-ci') && github.event.pull_request.merged) || env.act }}
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          command: manifest

      - name: delete non-root releases
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        env:
          RELEASE_OUTPUT: ${{ toJson(steps.release.outputs) }}
          GH_TOKEN: ${{ github.token }}
        run: |
          tags=$(echo $RELEASE_OUTPUT | jq -r 'to_entries | map(select( .key | endswith("--tag_name"))  | .value) | .[]')
          for tag in $tags; do
            echo "deleting release with tag $tag"
            gh release -R $GITHUB_REPOSITORY delete -y $tag
          done
